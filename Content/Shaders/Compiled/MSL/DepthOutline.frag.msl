#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UBO
{
    float2 PixelSize;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_UBO& UBO [[buffer(0)]], texture2d<float> ColorTexture [[texture(0)]], texture2d<float> DepthTexture [[texture(1)]], sampler ColorSampler [[sampler(0)]], sampler DepthSampler [[sampler(1)]])
{
    main0_out out = {};
    float4 _40 = ColorTexture.sample(ColorSampler, in.in_var_TEXCOORD0);
    float4 _44 = DepthTexture.sample(DepthSampler, in.in_var_TEXCOORD0);
    float _45 = _44.x;
    float2 _48 = float2(UBO.PixelSize.x, 0.0);
    float2 _56 = float2(-UBO.PixelSize.x, 0.0);
    float2 _65 = float2(0.0, UBO.PixelSize.y);
    float2 _73 = float2(0.0, -UBO.PixelSize.y);
    float3 _116 = mix(mix(_40.xyz, float3(0.0), float3(step(0.100000001490116119384765625, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_48 * 2.0))).x - _45, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_56 * 2.0))).x - _45, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_65 * 2.0))).x - _45, DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_73 * 2.0))).x - _45)))))), float3(1.0), float3(step(0.100000001490116119384765625, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_48 * 1.0))).x - _45, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_56 * 1.0))).x - _45, precise::max(DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_65 * 1.0))).x - _45, DepthTexture.sample(DepthSampler, (in.in_var_TEXCOORD0 + (_73 * 1.0))).x - _45))))));
    out.out_var_SV_Target0 = float4(_116, _40.w);
    return out;
}

